name: Build and deploy Release

on:
  push:
    tags:
      - v*
env:
  IMAGE_NAME: mortgage-calculator-api
  APP_NAME: secret-journey-21988

jobs:

  push:
    name: Push image to packages
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: | 

          #  setting application version
          BUILD_COMMIT=$(git rev-parse --short HEAD)
          BUILD_VERSION=$(git describe --exact-match --tags $(git log -n1 --pretty='%h'))

          docker build . --file Dockerfile --build-arg APP_VERSION=$BUILD_VERSION-$BUILD_COMMIT --tag $IMAGE_NAME

      - name: Log into GitHub registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |

          # setting image id
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # getting the correct version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          VERSION=$(echo $VERSION | sed -e 's/^v//')

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  push-docker-hub:

    name: Push image to Docker Hub
    runs-on: ubuntu-latest
    needs: push

    steps:

      - name: Log into GitHub registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Download image from GitHub Packages
        run: |

          # getting the correct version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          VERSION=$(echo $VERSION | sed -e 's/^v//')

          docker pull docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME:$VERSION

      - name: Logout from GitHub registry
        run: docker logout docker.pkg.github.com

      - name: Login into Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u lealoureiro --password-stdin
      
      - name: Push image to Docker Hub
        run: | 

          # getting the correct version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          VERSION=$(echo $VERSION | sed -e 's/^v//')

          docker tag docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME:$VERSION lealoureiro/$IMAGE_NAME:$VERSION
          docker push lealoureiro/${IMAGE_NAME}:$VERSION
      
      - name: Logout from Docker Hub
        run: docker logout

  deploy:
    
    name: Deploy release to Heroku
    runs-on: ubuntu-latest
    needs: push 

    steps:

      - name: Log into GitHub registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Download image from GitHub Packages
        run: |

          # getting the correct version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          VERSION=$(echo $VERSION | sed -e 's/^v//')

          docker pull docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME:$VERSION

      - name: Logout from GitHub registry
        run: docker logout docker.pkg.github.com

      - name: Login into Heroku registry
        run: echo "${{ secrets.HEROKU_TOKEN }}" | docker login registry.heroku.com -u ${{ secrets.HEROKU_MAIL }} --password-stdin

      - name: Push image to Heroku registry
        run: | 

          # Get correct version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          VERSION=$(echo $VERSION | sed -e 's/^v//')

          docker tag docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME:$VERSION registry.heroku.com/$APP_NAME/web
          docker push registry.heroku.com/$APP_NAME/web

      - name: Deploy image in Heorku App
        run: heroku container:release web -a $APP_NAME
        env: 
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
